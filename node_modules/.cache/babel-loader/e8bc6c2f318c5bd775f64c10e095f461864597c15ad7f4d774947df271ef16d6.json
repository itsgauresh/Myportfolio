{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\conne\\\\OneDrive\\\\Desktop\\\\portfolio\\\\src\\\\chatbot\\\\ChatbotUI.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Fuse from \"fuse.js\";\nimport faqData from \"../data/faqData.json\";\nimport \"./ChatbotUI.css\"; // Create this for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fuse = new Fuse(faqData, {\n  keys: [\"question\"],\n  threshold: 0.4 // Matching tolerance\n});\n\nexport default function ChatbotUI() {\n  _s();\n  const [messages, setMessages] = useState([{\n    from: \"bot\",\n    text: \"Hi! Ask me anything about my portfolio.\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      from: \"user\",\n      text: input\n    };\n    const results = fuse.search(input);\n    const botAnswer = results.length > 0 ? results[0].item.answer : \"Sorry, I don't have an answer for that.\";\n    const botMessage = {\n      from: \"bot\",\n      text: botAnswer\n    };\n    setMessages([...messages, userMessage, botMessage]);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.from}`,\n        children: msg.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ask a question...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatbotUI, \"5xDb9yz3pQNdcc1Vl5SQVVq+kIM=\");\n_c = ChatbotUI;\nvar _c;\n$RefreshReg$(_c, \"ChatbotUI\");","map":{"version":3,"names":["React","useState","Fuse","faqData","jsxDEV","_jsxDEV","fuse","keys","threshold","ChatbotUI","_s","messages","setMessages","from","text","input","setInput","sendMessage","trim","userMessage","results","search","botAnswer","length","item","answer","botMessage","className","children","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/conne/OneDrive/Desktop/portfolio/src/chatbot/ChatbotUI.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Fuse from \"fuse.js\";\r\nimport faqData from \"../data/faqData.json\";\r\nimport \"./ChatbotUI.css\"; // Create this for styling\r\n\r\nconst fuse = new Fuse(faqData, {\r\n  keys: [\"question\"],\r\n  threshold: 0.4, // Matching tolerance\r\n});\r\n\r\nexport default function ChatbotUI() {\r\n  const [messages, setMessages] = useState([\r\n    { from: \"bot\", text: \"Hi! Ask me anything about my portfolio.\" },\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { from: \"user\", text: input };\r\n    const results = fuse.search(input);\r\n    const botAnswer = results.length > 0\r\n      ? results[0].item.answer\r\n      : \"Sorry, I don't have an answer for that.\";\r\n\r\n    const botMessage = { from: \"bot\", text: botAnswer };\r\n\r\n    setMessages([...messages, userMessage, botMessage]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chat-window\">\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} className={`message ${msg.from}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-row\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ask a question...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}