{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\conne\\\\OneDrive\\\\Desktop\\\\portfolio\\\\src\\\\chatbot\\\\ChatbotUI.js\",\n  _s = $RefreshSig$();\n// ChatbotUI.js\nimport React, { useState } from \"react\";\nimport \"./ChatbotUI.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotUI = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: \"Hello! Ask me anything.\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages([...messages, userMessage]);\n    setInput(\"\");\n    try {\n      const inference = new window.HFInference(\"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\"); // Replace with actual token\n      const response = await inference.textGeneration({\n        model: \"gpt2\",\n        inputs: input\n      });\n      const botMessage = {\n        sender: \"bot\",\n        text: response.generated_text\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"Sorry, something went wrong.\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-msg ${msg.sender}`,\n        children: msg.text\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotUI, \"SqaMWMa5ZMQ/xPdmFjsHRyMR5pk=\");\n_c = ChatbotUI;\nexport default ChatbotUI;\nvar _c;\n$RefreshReg$(_c, \"ChatbotUI\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatbotUI","_s","messages","setMessages","sender","text","input","setInput","sendMessage","trim","userMessage","inference","window","HFInference","response","textGeneration","model","inputs","botMessage","generated_text","prev","err","className","children","map","msg","i","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/conne/OneDrive/Desktop/portfolio/src/chatbot/ChatbotUI.js"],"sourcesContent":["// ChatbotUI.js\r\nimport React, { useState } from \"react\";\r\nimport \"./ChatbotUI.css\";\r\n\r\nconst ChatbotUI = () => {\r\n  const [messages, setMessages] = useState([\r\n    { sender: \"bot\", text: \"Hello! Ask me anything.\" }\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: \"user\", text: input };\r\n    setMessages([...messages, userMessage]);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const inference = new window.HFInference(\"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\"); // Replace with actual token\r\n      const response = await inference.textGeneration({\r\n        model: \"gpt2\",\r\n        inputs: input\r\n      });\r\n\r\n      const botMessage = { sender: \"bot\", text: response.generated_text };\r\n      setMessages(prev => [...prev, botMessage]);\r\n    } catch (err) {\r\n      setMessages(prev => [\r\n        ...prev,\r\n        { sender: \"bot\", text: \"Sorry, something went wrong.\" }\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-box\">\r\n      <div className=\"chatbot-messages\">\r\n        {messages.map((msg, i) => (\r\n          <div key={i} className={`chat-msg ${msg.sender}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chatbot-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n          value={input}\r\n          onChange={e => setInput(e.target.value)}\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatbotUI;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}