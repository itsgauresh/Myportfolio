{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\conne\\\\OneDrive\\\\Desktop\\\\portfolio\\\\src\\\\Pages\\\\Home\\\\Achivement.jsx\";\nimport data from \"../../data/index.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction chunkArray(array, size) {\n  const chunked = [];\n  for (let i = 0; i < array.length; i += size) {\n    chunked.push(array.slice(i, i + size));\n  }\n  return chunked;\n}\nexport default function MyAchievements() {\n  // Group achievements into chunks of 2 per card\n  const groupedAchievements = chunkArray((data === null || data === void 0 ? void 0 : data.achievements) || [], 2);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"achievements--section\",\n    id: \"myAchievements\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio--container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"achievements--section--heading\",\n        children: \"My Achievements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"achievements--section--container\",\n      children: groupedAchievements.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"achievements--section--card\",\n        children: group.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievement--item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"achievement--img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.src,\n              alt: item.title,\n              width: \"54\",\n              height: \"54\",\n              style: {\n                objectFit: \"contain\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"achievement--content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"achievement--title\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"achievement--description\",\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = MyAchievements;\nvar _c;\n$RefreshReg$(_c, \"MyAchievements\");","map":{"version":3,"names":["data","jsxDEV","_jsxDEV","chunkArray","array","size","chunked","i","length","push","slice","MyAchievements","groupedAchievements","achievements","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","group","index","item","idx","src","alt","title","width","height","style","objectFit","description","_c","$RefreshReg$"],"sources":["C:/Users/conne/OneDrive/Desktop/portfolio/src/Pages/Home/Achivement.jsx"],"sourcesContent":["import data from \"../../data/index.json\";\r\n\r\nfunction chunkArray(array, size) {\r\n  const chunked = [];\r\n  for (let i = 0; i < array.length; i += size) {\r\n    chunked.push(array.slice(i, i + size));\r\n  }\r\n  return chunked;\r\n}\r\n\r\nexport default function MyAchievements() {\r\n  // Group achievements into chunks of 2 per card\r\n  const groupedAchievements = chunkArray(data?.achievements || [], 2);\r\n\r\n  return (\r\n    <section className=\"achievements--section\" id=\"myAchievements\">\r\n      <div className=\"portfolio--container\">\r\n        <h2 className=\"achievements--section--heading\">My Achievements</h2>\r\n      </div>\r\n\r\n      <div className=\"achievements--section--container\">\r\n        {groupedAchievements.map((group, index) => (\r\n          <div key={index} className=\"achievements--section--card\">\r\n            {group.map((item, idx) => (\r\n              <div key={idx} className=\"achievement--item\">\r\n                <div className=\"achievement--img\">\r\n                  <img\r\n                    src={item.src}\r\n                    alt={item.title}\r\n                    width=\"54\"\r\n                    height=\"54\"\r\n                    style={{ objectFit: \"contain\" }}\r\n                  />\r\n                </div>\r\n                <div className=\"achievement--content\">\r\n                  <h3 className=\"achievement--title\">{item.title}</h3>\r\n                  <p className=\"achievement--description\">{item.description}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}