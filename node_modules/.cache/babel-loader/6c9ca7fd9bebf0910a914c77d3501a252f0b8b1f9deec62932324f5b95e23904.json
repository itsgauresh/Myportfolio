{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/conne/OneDrive/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/conne/OneDrive/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nvar getLeftTime = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(id, throttle, storage) {\n    var lastTime;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = Number;\n          _context.next = 3;\n          return storage.get(id);\n        case 3:\n          _context.t1 = _context.sent;\n          if (_context.t1) {\n            _context.next = 6;\n            break;\n          }\n          _context.t1 = 0;\n        case 6:\n          _context.t2 = _context.t1;\n          lastTime = (0, _context.t0)(_context.t2);\n          return _context.abrupt(\"return\", throttle - Date.now() + lastTime);\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function getLeftTime(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var isLimitRateHit = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(defaultID, options, storage) {\n    var id, leftTime;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!(!options.throttle || !storage)) {\n            _context2.next = 2;\n            break;\n          }\n          return _context2.abrupt(\"return\", false);\n        case 2:\n          validateLimitRateParams(options.throttle, options.id);\n          id = options.id || defaultID;\n          _context2.next = 6;\n          return getLeftTime(id, options.throttle, storage);\n        case 6:\n          leftTime = _context2.sent;\n          if (!(leftTime > 0)) {\n            _context2.next = 9;\n            break;\n          }\n          return _context2.abrupt(\"return\", true);\n        case 9:\n          _context2.next = 11;\n          return storage.set(id, Date.now().toString());\n        case 11:\n          return _context2.abrupt(\"return\", false);\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function isLimitRateHit(_x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["validateLimitRateParams","getLeftTime","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","throttle","storage","lastTime","wrap","_callee$","_context","prev","next","t0","Number","get","t1","sent","t2","abrupt","Date","now","stop","_x","_x2","_x3","apply","arguments","isLimitRateHit","_ref2","_callee2","defaultID","options","leftTime","_callee2$","_context2","set","toString","_x4","_x5","_x6"],"sources":["C:/Users/conne/OneDrive/Desktop/portfolio/node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js"],"sourcesContent":["import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\r\nconst getLeftTime = async (id, throttle, storage) => {\r\n    const lastTime = Number((await storage.get(id)) || 0);\r\n    return throttle - Date.now() + lastTime;\r\n};\r\nexport const isLimitRateHit = async (defaultID, options, storage) => {\r\n    if (!options.throttle || !storage) {\r\n        return false;\r\n    }\r\n    validateLimitRateParams(options.throttle, options.id);\r\n    const id = options.id || defaultID;\r\n    const leftTime = await getLeftTime(id, options.throttle, storage);\r\n    if (leftTime > 0) {\r\n        return true;\r\n    }\r\n    await storage.set(id, Date.now().toString());\r\n    return false;\r\n};\r\n"],"mappings":";;AAAA,SAASA,uBAAuB,QAAQ,oDAAoD;AAC5F,IAAMC,WAAW;EAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,EAAE,EAAEC,QAAQ,EAAEC,OAAO;IAAA,IAAAC,QAAA;IAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAG,EAAA,GAC3BC,MAAM;UAAAJ,QAAA,CAAAE,IAAA;UAAA,OAAQN,OAAO,CAACS,GAAG,CAACX,EAAE,CAAC;QAAA;UAAAM,QAAA,CAAAM,EAAA,GAAAN,QAAA,CAAAO,IAAA;UAAA,IAAAP,QAAA,CAAAM,EAAA;YAAAN,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAM,EAAA,GAAK,CAAC;QAAA;UAAAN,QAAA,CAAAQ,EAAA,GAAAR,QAAA,CAAAM,EAAA;UAA9CT,QAAQ,OAAAG,QAAA,CAAAG,EAAA,EAAAH,QAAA,CAAAQ,EAAA;UAAA,OAAAR,QAAA,CAAAS,MAAA,WACPd,QAAQ,GAAGe,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGd,QAAQ;QAAA;QAAA;UAAA,OAAAG,QAAA,CAAAY,IAAA;MAAA;IAAA,GAAAnB,OAAA;EAAA,CAC1C;EAAA,gBAHKL,WAAWA,CAAAyB,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAA1B,IAAA,CAAA2B,KAAA,OAAAC,SAAA;EAAA;AAAA,GAGhB;AACD,OAAO,IAAMC,cAAc;EAAA,IAAAC,KAAA,GAAA7B,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA4B,SAAOC,SAAS,EAAEC,OAAO,EAAE1B,OAAO;IAAA,IAAAF,EAAA,EAAA6B,QAAA;IAAA,OAAAhC,mBAAA,GAAAO,IAAA,UAAA0B,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAxB,IAAA,GAAAwB,SAAA,CAAAvB,IAAA;QAAA;UAAA,MACxD,CAACoB,OAAO,CAAC3B,QAAQ,IAAI,CAACC,OAAO;YAAA6B,SAAA,CAAAvB,IAAA;YAAA;UAAA;UAAA,OAAAuB,SAAA,CAAAhB,MAAA,WACtB,KAAK;QAAA;UAEhBtB,uBAAuB,CAACmC,OAAO,CAAC3B,QAAQ,EAAE2B,OAAO,CAAC5B,EAAE,CAAC;UAC/CA,EAAE,GAAG4B,OAAO,CAAC5B,EAAE,IAAI2B,SAAS;UAAAI,SAAA,CAAAvB,IAAA;UAAA,OACXd,WAAW,CAACM,EAAE,EAAE4B,OAAO,CAAC3B,QAAQ,EAAEC,OAAO,CAAC;QAAA;UAA3D2B,QAAQ,GAAAE,SAAA,CAAAlB,IAAA;UAAA,MACVgB,QAAQ,GAAG,CAAC;YAAAE,SAAA,CAAAvB,IAAA;YAAA;UAAA;UAAA,OAAAuB,SAAA,CAAAhB,MAAA,WACL,IAAI;QAAA;UAAAgB,SAAA,CAAAvB,IAAA;UAAA,OAETN,OAAO,CAAC8B,GAAG,CAAChC,EAAE,EAAEgB,IAAI,CAACC,GAAG,CAAC,CAAC,CAACgB,QAAQ,CAAC,CAAC,CAAC;QAAA;UAAA,OAAAF,SAAA,CAAAhB,MAAA,WACrC,KAAK;QAAA;QAAA;UAAA,OAAAgB,SAAA,CAAAb,IAAA;MAAA;IAAA,GAAAQ,QAAA;EAAA,CACf;EAAA,gBAZYF,cAAcA,CAAAU,GAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAX,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAY1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}