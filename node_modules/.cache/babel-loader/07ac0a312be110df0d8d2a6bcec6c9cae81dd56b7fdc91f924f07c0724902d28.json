{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\conne\\\\OneDrive\\\\Desktop\\\\portfolio\\\\src\\\\chatbot\\\\ChatbotUI.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ChatbotUI.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotUI = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    type: \"bot\",\n    text: \"Hello! Ask me anything about my portfolio.\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n  };\n  const sendMessage = () => {\n    if (!input.trim()) return;\n    setMessages([...messages, {\n      type: \"user\",\n      text: input\n    }]);\n\n    // Static response (customize these with portfolio content)\n    const reply = \"Thanks for your interest! I'll get back to you soon.\";\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        type: \"bot\",\n        text: reply\n      }]);\n    }, 800);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [!isOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleChat,\n      style: {\n        borderRadius: \"50%\",\n        padding: \"12px\"\n      },\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"300px\",\n        background: \"white\",\n        boxShadow: \"0 0 8px #ccc\",\n        borderRadius: \"8px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"10px\",\n          fontWeight: \"bold\",\n          borderBottom: \"1px solid #eee\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Portfolio Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleChat,\n          style: {\n            float: \"right\",\n            border: \"none\",\n            background: \"none\",\n            fontSize: \"18px\"\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.type}`,\n          children: msg.text\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type a message...\",\n          onKeyDown: e => e.key === \"Enter\" && sendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotUI, \"5xJB/9LWtAFyp2Ypmlb5evVPdgA=\");\n_c = ChatbotUI;\nexport default ChatbotUI;\nvar _c;\n$RefreshReg$(_c, \"ChatbotUI\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatbotUI","_s","isOpen","setIsOpen","messages","setMessages","type","text","input","setInput","toggleChat","sendMessage","trim","reply","setTimeout","prev","className","children","onClick","style","borderRadius","padding","fileName","_jsxFileName","lineNumber","columnNumber","width","background","boxShadow","fontWeight","borderBottom","float","border","fontSize","map","msg","idx","value","onChange","e","target","placeholder","onKeyDown","key","_c","$RefreshReg$"],"sources":["C:/Users/conne/OneDrive/Desktop/portfolio/src/chatbot/ChatbotUI.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ChatbotUI.css\";\r\n\r\nconst ChatbotUI = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    { type: \"bot\", text: \"Hello! Ask me anything about my portfolio.\" },\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const toggleChat = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (!input.trim()) return;\r\n\r\n    setMessages([...messages, { type: \"user\", text: input }]);\r\n\r\n    // Static response (customize these with portfolio content)\r\n    const reply = \"Thanks for your interest! I'll get back to you soon.\";\r\n    setTimeout(() => {\r\n      setMessages((prev) => [...prev, { type: \"bot\", text: reply }]);\r\n    }, 800);\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      {!isOpen && (\r\n        <button onClick={toggleChat} style={{ borderRadius: \"50%\", padding: \"12px\" }}>\r\n          ðŸ’¬\r\n        </button>\r\n      )}\r\n\r\n      {isOpen && (\r\n        <div style={{ width: \"300px\", background: \"white\", boxShadow: \"0 0 8px #ccc\", borderRadius: \"8px\" }}>\r\n          <div style={{ padding: \"10px\", fontWeight: \"bold\", borderBottom: \"1px solid #eee\" }}>\r\n            <span>Portfolio Assistant</span>\r\n            <button onClick={toggleChat} style={{ float: \"right\", border: \"none\", background: \"none\", fontSize: \"18px\" }}>\r\n              Ã—\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"chat-window\">\r\n            {messages.map((msg, idx) => (\r\n              <div key={idx} className={`message ${msg.type}`}>\r\n                {msg.text}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"input-row\">\r\n            <input\r\n              type=\"text\"\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              placeholder=\"Type a message...\"\r\n              onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n            />\r\n            <button onClick={sendMessage}>Send</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatbotUI;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}