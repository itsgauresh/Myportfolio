{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\conne\\\\OneDrive\\\\Desktop\\\\portfolio\\\\src\\\\chatbot\\\\ChatbotUI.js\",\n  _s = $RefreshSig$();\n// ChatbotUI.jsx\nimport React, { useState } from \"react\";\nimport \".\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotUI = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setChat([...chat, {\n      sender: \"user\",\n      text: input\n    }]);\n    const hf = new window.HfInference(\"hf_xxxxxxx\"); // Optional: your HF key\n\n    const response = await hf.textGeneration({\n      model: \"google/flan-t5-small\",\n      // or DialoGPT\n      inputs: input,\n      parameters: {\n        max_new_tokens: 50\n      }\n    });\n    setChat(prev => [...prev, {\n      sender: \"bot\",\n      text: response.generated_text\n    }]);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: chat.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.sender === \"user\" ? \"user-msg\" : \"bot-msg\",\n        children: msg.text\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Ask me something...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotUI, \"Y63bZYzsNKnGxQ+fIpZoag+LYKc=\");\n_c = ChatbotUI;\nexport default ChatbotUI;\nvar _c;\n$RefreshReg$(_c, \"ChatbotUI\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatbotUI","_s","input","setInput","chat","setChat","sendMessage","trim","sender","text","hf","window","HfInference","response","textGeneration","model","inputs","parameters","max_new_tokens","prev","generated_text","className","children","map","msg","i","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/conne/OneDrive/Desktop/portfolio/src/chatbot/ChatbotUI.js"],"sourcesContent":["// ChatbotUI.jsx\r\nimport React, { useState } from \"react\";\r\nimport \".\"\r\n\r\nconst ChatbotUI = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [chat, setChat] = useState([]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    setChat([...chat, { sender: \"user\", text: input }]);\r\n\r\n    const hf = new window.HfInference(\"hf_xxxxxxx\"); // Optional: your HF key\r\n\r\n    const response = await hf.textGeneration({\r\n      model: \"google/flan-t5-small\", // or DialoGPT\r\n      inputs: input,\r\n      parameters: { max_new_tokens: 50 }\r\n    });\r\n\r\n    setChat(prev => [...prev, { sender: \"bot\", text: response.generated_text }]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-box\">\r\n      <div className=\"chat-window\">\r\n        {chat.map((msg, i) => (\r\n          <div key={i} className={msg.sender === \"user\" ? \"user-msg\" : \"bot-msg\"}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-area\">\r\n        <input value={input} onChange={e => setInput(e.target.value)} placeholder=\"Ask me something...\" />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatbotUI;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,GAAG;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEV,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACJ,KAAK,CAACK,IAAI,CAAC,CAAC,EAAE;IAEnBF,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;MAAEI,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEP;IAAM,CAAC,CAAC,CAAC;IAEnD,MAAMQ,EAAE,GAAG,IAAIC,MAAM,CAACC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;;IAEjD,MAAMC,QAAQ,GAAG,MAAMH,EAAE,CAACI,cAAc,CAAC;MACvCC,KAAK,EAAE,sBAAsB;MAAE;MAC/BC,MAAM,EAAEd,KAAK;MACbe,UAAU,EAAE;QAAEC,cAAc,EAAE;MAAG;IACnC,CAAC,CAAC;IAEFb,OAAO,CAACc,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAEX,MAAM,EAAE,KAAK;MAAEC,IAAI,EAAEI,QAAQ,CAACO;IAAe,CAAC,CAAC,CAAC;IAC5EjB,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEJ,OAAA;IAAKsB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BvB,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBlB,IAAI,CAACmB,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBACf1B,OAAA;QAAasB,SAAS,EAAEG,GAAG,CAAChB,MAAM,KAAK,MAAM,GAAG,UAAU,GAAG,SAAU;QAAAc,QAAA,EACpEE,GAAG,CAACf;MAAI,GADDgB,CAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN9B,OAAA;MAAKsB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBvB,OAAA;QAAO+B,KAAK,EAAE5B,KAAM;QAAC6B,QAAQ,EAAEC,CAAC,IAAI7B,QAAQ,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,WAAW,EAAC;MAAqB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClG9B,OAAA;QAAQoC,OAAO,EAAE7B,WAAY;QAAAgB,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CApCID,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}