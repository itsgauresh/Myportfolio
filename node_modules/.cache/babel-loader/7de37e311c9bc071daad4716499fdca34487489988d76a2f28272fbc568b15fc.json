{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\conne\\\\OneDrive\\\\Desktop\\\\portfolio\\\\src\\\\chatbot\\\\ChatbotUI.js\",\n  _s = $RefreshSig$();\n// ChatbotUI.js\nimport React, { useState } from \"react\";\nimport \"./ChatbotUI.css\"; // Style as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HUGGINGFACE_API_KEY = \"Yhf_oCdsjFSJgkHqXlTwgXgqOBnZnDjUqsuTYZ\"; // Replace with your actual key\n\nexport default function ChatbotUI() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages([...messages, userMessage]);\n    setInput(\"\");\n    setLoading(true);\n    try {\n      var _data$;\n      const response = await fetch(\"https://api-inference.huggingface.co/models/gpt2\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${HUGGINGFACE_API_KEY}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          inputs: input\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        text: (data === null || data === void 0 ? void 0 : (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.generated_text) || \"Sorry, I couldn't understand.\",\n        sender: \"bot\"\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        text: \"Something went wrong.\",\n        sender: \"bot\"\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot\",\n        children: \"Typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n        placeholder: \"Say something...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatbotUI, \"FpfR4LFmT6AFISP10oyeCF5r9c0=\");\n_c = ChatbotUI;\nvar _c;\n$RefreshReg$(_c, \"ChatbotUI\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HUGGINGFACE_API_KEY","ChatbotUI","_s","messages","setMessages","input","setInput","loading","setLoading","sendMessage","trim","userMessage","text","sender","_data$","response","fetch","method","headers","Authorization","body","JSON","stringify","inputs","data","json","botMessage","generated_text","prev","err","className","children","map","msg","i","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyDown","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/conne/OneDrive/Desktop/portfolio/src/chatbot/ChatbotUI.js"],"sourcesContent":["// ChatbotUI.js\r\nimport React, { useState } from \"react\";\r\nimport \"./ChatbotUI.css\"; // Style as needed\r\n\r\nconst HUGGINGFACE_API_KEY = \"Yhf_oCdsjFSJgkHqXlTwgXgqOBnZnDjUqsuTYZ\"; // Replace with your actual key\r\n\r\nexport default function ChatbotUI() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { text: input, sender: \"user\" };\r\n    setMessages([...messages, userMessage]);\r\n    setInput(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"https://api-inference.huggingface.co/models/gpt2\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${HUGGINGFACE_API_KEY}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ inputs: input }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const botMessage = {\r\n        text: data?.[0]?.generated_text || \"Sorry, I couldn't understand.\",\r\n        sender: \"bot\",\r\n      };\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (err) {\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { text: \"Something went wrong.\", sender: \"bot\" },\r\n      ]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chat-window\">\r\n        {messages.map((msg, i) => (\r\n          <div key={i} className={`message ${msg.sender}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n        {loading && <div className=\"message bot\">Typing...</div>}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n          placeholder=\"Say something...\"\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}